{"version":3,"sources":["components/AddHero.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddHero","setHeroes","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","initialState","console","error","onChange","target","value","placeholder","type","getGifs","hero","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","items","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","heroes","heroesList","heroe","ReactDOM","render","document","getElementById"],"mappings":"qSAIe,SAASA,EAAT,GAAiC,IAAdC,EAAa,EAAbA,UAChC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACE,sBAAMC,UAAU,OAAOC,SAbJ,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,GAC7BT,GAAU,SAACU,GAAD,OAAmBR,GAAnB,mBAAkCQ,OAC5CP,EAAc,KAEdQ,QAAQC,MACN,oEAMJ,SACE,uBACEC,SAnBiB,SAACP,GACtBH,EAAcG,EAAEQ,OAAOC,QAmBnBC,YAAY,uBACZC,KAAK,OACLF,MAAOb,EACPE,UAAU,e,0CC/BLc,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,0FAC0EC,UAC7FH,GAFmB,sBAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAD,YAAU,CAC9BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVf,kBAadM,GAbc,4CAAH,sDCYLO,G,MATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,yBAAQjB,UAAU,yCAAlB,UACE,qBAAKA,UAAU,MAAM+B,IAAKd,EAAKe,IAAKL,IACpC,4BAAY3B,UAAU,kBAAtB,SAAyC2B,SC+BhCM,MAjCf,YAA4B,IAATlB,EAAQ,EAARA,KAgBXmB,EClBoB,SAACnB,GAC3B,MAA0BlB,mBAAS,CAAEyB,KAAM,GAAIa,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,WACRxB,EAAQC,GAAMwB,MAAK,SAACC,GAClBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDIUK,CAAa1B,GAAtBO,KAEWE,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,2BAA8BA,GAA9B,IAAmCzB,UAAU,SAA3ByB,EAAIC,OAGxB,OACE,sBAAK1B,UAAU,gBAAf,UACE,oBAAIA,UAAU,gDAAd,SAA+De,IAE/D,qBAAKf,UAAU,gBAAf,SAAgCkC,QEJvBQ,G,MApBM,WACnB,MAA4B7C,mBAAS,CAAC,YAAtC,mBAAO8C,EAAP,KAAe/C,EAAf,KAEMgD,EAAaD,EAAOnB,KAAI,SAACqB,GAAD,OAC5B,cAAC,EAAD,CAAqB9B,KAAM8B,GAAbA,MAGhB,OACE,uBAAM7C,UAAU,OAAhB,UACE,qBAAIA,UAAU,gDAAd,sBACW,sBAAMA,UAAU,sBAAhB,oBAGX,cAACL,EAAD,CAASC,UAAWA,IAEnBgD,O,MCfPE,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.f6a2ba1d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../assets/sass/components/addHeroe.sass\";\r\n\r\nexport default function AddHero({ setHeroes }) {\r\n  const [inputValue, setInputValue] = useState(\"\"); //useState tiene valor undefined por defecto\r\n  // No es undefined por defecto, inputValue ahora mismo tiene por defecto un string vacío @ Julián\r\n\r\n  const handleOnChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 0) {\r\n      setHeroes((initialState) => [inputValue, ...initialState]);\r\n      setInputValue(\"\");\r\n    } else {\r\n      console.error(\r\n        \"input void, please enter a hero name before submit your request\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"form\" onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleOnChange}\r\n        placeholder=\"Search your gif here\"\r\n        type=\"text\"\r\n        value={inputValue}\r\n        className=\"searcher\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\n//validacion de requrimiento de setHeroes como proptype\r\nAddHero.propTypes = {\r\n  setHeroes: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (hero) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=NFxoxsrYkc0d1jXPTyypk9DB5KUHltu1&q=${encodeURI(\r\n    hero\r\n  )}&limit=30`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n  }));\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport \"../assets/sass/components/gifGridItem.sass\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <figure className=\"card animate__animated animate__fadeIn\">\r\n      <img className=\"gif\" src={url} alt={title} />\r\n      <figcaption className=\"card-img__title\">{title}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import PropTypes from \"prop-types\";\r\nimport \"../assets/sass/components/gifGrid.sass\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nfunction GifGrid({ hero }) {\r\n  // const [images, setImages] = useState([]);\r\n\r\n  /*\r\n    const [counter, setCounter] = useState(0)\r\n\r\n    //useEffect([func], [dependencies])\r\n    */\r\n  // useEffect(() => {\r\n  //     getGifs(hero).then((imgs) => setImages(imgs));\r\n  // }, [hero]);\r\n\r\n  //getGifs();\r\n\r\n  const { data } = useFetchGifs(hero);\r\n\r\n  const items = data.map((img) => (\r\n    <GifGridItem key={img.id} {...img} className=\"grid\" />\r\n  ));\r\n\r\n  return (\r\n    <div className='search-result'>\r\n      <h2 className=\"animate__animated animate__fadeIn search-term\">{hero}</h2>\r\n\r\n      <div className=\"gif-container\">{items}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nGifGrid.propTypes = {\r\n  hero: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (hero) => {\r\n  const [state, setState] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    getGifs(hero).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [hero]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddHero from \"./components/AddHero\";\r\nimport GifGrid from \"./components/GifGrid\";\r\nimport \"./assets/sass/components/giftExpertApp.sass\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [heroes, setHeroes] = useState([\"Saitama\"]);\r\n\r\n  const heroesList = heroes.map((heroe) => (\r\n    <GifGrid key={heroe} hero={heroe} />\r\n  ));\r\n\r\n  return (\r\n    <main className=\"main\">\r\n      <h1 className=\"animate__animated animate__bounce main__title\">\r\n        GifExpert<span className=\"main-title--colored\">App</span>\r\n      </h1>\r\n\r\n      <AddHero setHeroes={setHeroes} />\r\n\r\n      {heroesList}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GifExpertApp from \"./GifExpertApp\";\r\nimport \"./assets/sass/components/index.sass\";\r\n\r\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}